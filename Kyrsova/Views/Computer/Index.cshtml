@model IEnumerable<Computer>

@{
    ViewData["Title"] = "Computer List";
}

<h3>@ViewData["Title"]</h3>
<form method="get" class="d-flex">
    <div class=" input-group mb-3 w-25 ms-md-auto">
        <input type="text" class="form-control" placeholder="Search by name" aria-label="Search" aria-describedby="button-addon2" name="SearchString" value="@ViewBag.SearchString">
        <button class="btn btn-outline-secondary" type="submit" id="button-addon2">
            <i class="fas fa-search" aria-hidden="true"></i>
        </button>

    </div>
    <a asp-action="Index" asp-controller="Computer" asp-route-sortState="@ViewBag.CurrentSort" asp-route-pageIndex="@ViewBag.CurrentPage" class="text-decoration-none ms-lg-2 h-25  text-white btn btn-primary ">Full List</a>
</form>

<hr />
<form>
    <button asp-action="Create" asp-controller="Computer" class="btn btn-primary mb-3">Create Computer</button>
    <table class="table table-responsive table-bordered table-hover">
        <thead>
            <tr class="table-active text-center">
                <th>
                    <i class="@ViewData["IconId"]"></i>
                    <a asp-action="Index" asp-route-sortState="@ViewBag.IdSort" asp-route-searchString="@ViewBag.SearchString" asp-route-pageIndex="@ViewBag.CurrentPage" class="text-decoration-none  text-dark">
                        @Html.DisplayNameFor(model => model.Id)
                    </a>
                </th>
                <th>
                    <i class="@ViewData["IconName"]"></i>
                    <a asp-action="Index" asp-route-sortState="@ViewBag.NameSort" asp-route-searchString="@ViewBag.SearchString" asp-route-pageIndex="@ViewBag.CurrentPage" class="text-decoration-none  text-dark">
                        @Html.DisplayNameFor(model => model.Name)
                    </a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastUpdatedDate)
                </th>
                @* <th>
                @Html.DisplayNameFor(model => model.Image)
                </th> *@
                <th>
                    @Html.DisplayNameFor(model => model.ComponentComputerId)
                </th>

                <th>
                    <i class="@ViewData["IconPrice"]"></i>
                    <a asp-action="Index" asp-route-sortState="@ViewBag.PriceSort" asp-route-searchString="@ViewBag.SearchString" asp-route-pageIndex="@ViewBag.CurrentPage" class="text-decoration-none  text-dark">
                        @Html.DisplayNameFor(model => model.Price)
                    </a>
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var computer in Model)
                {
                    <tr class="text-center">
                        <td>@computer.Id</td>
                        <td>@computer.Name</td>
                        <td>@computer.CreatedDate</td>
                        <td>@computer.LastUpdatedDate</td>
                        @* <td>@computer.Image</td> *@
                        <td>@computer.ComponentComputerId</td>
                        <td>@computer.Price</td>
                        <td class="text-center">
                            <div>
                                <a asp-controller="Computer" asp-action="Update" asp-route-id="@computer.Id" class="btn btn-success btn-sm">Edit</a>
                                <a asp-controller="Computer" asp-action="Detail" asp-route-id="@computer.Id" class="btn btn-primary btn-sm">Detail</a>
                                <a asp-controller="Computer" asp-action="Delete" asp-route-id="@computer.Id" class="btn btn-danger btn-sm">Delete</a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4">
                        <div>No Computer avaialble at this moment! </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

@{
    var prevDisabled = !ViewBag.PaginateViewModel.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !ViewBag.PaginateViewModel.HasNextPage ? "disabled" : "";
    var firstDisabled = ViewBag.PaginateViewModel.PageIndex == 1 ? "disabled" : "";
    var lastDisabled = ViewBag.PaginateViewModel.PageIndex == ViewBag.PaginateViewModel.TotalPages
        ? "disabled" : "";
}


<nav>
    <ul class="pagination">
        <a asp-action="Index" asp-controller="Computer"
           asp-route-sortState="@ViewBag.CurrentSort"
           asp-route-searchString="@ViewBag.SearchString"
           asp-route-pageIndex="1"
           class="btn page-link @firstDisabled" aria-label="First">
            @* <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span> *@
            First
        </a>

        <a asp-action="Index" asp-controller="Computer"
           asp-route-sortState="@ViewBag.CurrentSort"
           asp-route-pageIndex="@(ViewBag.PaginateViewModel.PageIndex - 1)"
           asp-route-searchString="@ViewBag.SearchString"
           class=" btn btn-primary  @prevDisabled">
            @* <span aria-hidden="true">&lsaquo;</span>
            <span class="sr-only">Previous</span> *@
            Prev
        </a>
        @if (ViewBag.CurrentPage - 1 > 1)
        {
            <li class="page-item disabled">
                <span class="page-link">...</span>
            </li>
        }

        @for (int i = Math.Max(1, ViewBag.pageIndex - 1); i <= Math.Min(ViewBag.pageIndex + 1, ViewBag.totalPages); i++)
        {
            string active = "";
            if (i == ViewBag.pageIndex) active = "active";

            <li class="page-item @active" aria-current="page">
                <a class="page-link" asp-action="Index" asp-controller="Computer" asp-route-pageIndex="@(i)" asp-route-searchString="@ViewBag.SearchString" asp-route-sortState="@ViewBag.CurrentSort">@i</a>
            </li>
        }


        @if (ViewBag.CurrentPage + 1 < ViewBag.totalPages)
        {
            <li class="page-item disabled">
                <span class="page-link">...</span>
            </li>
        }



        <a asp-action="Index" asp-controller="Computer"
           asp-route-sortState="@ViewBag.CurrentSort"
           asp-route-pageIndex="@(ViewBag.PaginateViewModel.PageIndex + 1)"
           asp-route-searchString="@ViewBag.SearchString"
           class="btn btn-primary  @nextDisabled">
            @* <span aria-hidden="true">&rsaquo;</span>
            <span class="sr-only">Previous</span> *@
            Next
        </a>

        <a asp-action="Index" asp-controller="Computer"
           asp-route-sortState="@ViewBag.CurrentSort"
           asp-route-searchString="@ViewBag.SearchString"
           asp-route-pageIndex="@ViewBag.PaginateViewModel.TotalPages"
           class="btn  page-link @lastDisabled" aria-label="Last">
            @* <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Previous</span> *@
            Last
        </a>
    </ul>
</nav>